{
    "action_group": {
        "action": [
            {
                "data": {
                    "runbookUrl": "https://raw.githubusercontent.com/neptuneio/Community-runbooks/master/runbooks/cli/heroku/kill_and_restart_when_fatal_postgres_locking.sh",
                    "steps": [
                        "Kill and restart postgres"
                    ]
                },
                "type": "CLI Action"
            }
        ],
        "template": {
            "category": "heroku",
            "id": "",
            "name": "kill_and_restart_when_fatal_postgres_locking.json"
        }
    },
    "rule_template": {
        "action_group": {
            "action": [
                {
                    "data": {
                        "runbookUrl": "https://raw.githubusercontent.com/neptuneio/Community-runbooks/master/runbooks/cli/heroku/kill_and_restart_when_fatal_postgres_locking.sh",
                        "steps": [
                            "Kill and restart postgres"
                        ]
                    },
                    "type": "CLI Action"
                }
            ],
            "template": {
                "category": "heroku",
                "id": "",
                "name": "kill_and_restart_when_fatal_postgres_locking.json"
            }
        },
        "rule_template": {
            "action_group": {
                "action": [
                    {
                        "data": {
                            "runbookUrl": "https://raw.githubusercontent.com/neptuneio/Community-runbooks/master/runbooks/cli/heroku/kill_and_restart_when_fatal_postgres_locking.sh",
                            "steps": [
                                "Kill and restart postgres"
                            ]
                        },
                        "type": "CLI Action"
                    }
                ],
                "template": {
                    "category": "heroku",
                    "id": "",
                    "name": "kill_and_restart_when_fatal_postgres_locking.json"
                }
            },
            "rule_template": {
                "action_group": {
                    "action": [
                        {
                            "data": {
                                "runbookUrl": "https://raw.githubusercontent.com/neptuneio/Community-runbooks/master/runbooks/cli/heroku/kill_and_restart_when_fatal_postgres_locking.sh",
                                "steps": [
                                    "Kill and restart postgres"
                                ]
                            },
                            "type": "CLI Action"
                        }
                    ],
                    "template": {
                        "category": "heroku",
                        "id": "",
                        "name": "kill_and_restart_when_fatal_postgres_locking.json"
                    }
                },
                "rule_template": {
                    "ActionGroup": {
                        "Actions": [
                            {
                                "ActionTarget": "HEROKU",
                                "ActionTargetType": null,
                                "ActionType": "CLI_ACTION",
                                "Active": true,
                                "Data": {
                                    "AlarmNames": [],
                                    "AwsRegion": null,
                                    "CloudAPIAction": null,
                                    "Hostname": [],
                                    "LogProvider": null,
                                    "MetricDefinitions": [],
                                    "MetricNames": [],
                                    "MetricSource": null,
                                    "PingSource": null,
                                    "Retries": 0,
                                    "RuleRunbook": {
                                        "Category": "GITHUB",
                                        "Content": null,
                                        "RunbookId": null,
                                        "RunbookName": "runbooks/cli/heroku/postgres/kill_and_restart_when_fatal_postgres_locking.sh",
                                        "Timeout": 2,
                                        "Url": "https://api.github.com/repos/neptuneio/Community-runbooks/git/blobs/7ffebd23cb0ed9321aa2e9f03fde54e5cb8d79bf",
                                        "Visibility": "PUBLIC"
                                    },
                                    "ServiceCheckAction": null,
                                    "Tags": []
                                }
                            }
                        ]
                    },
                    "CapDuration": 30,
                    "CapLimit": 3,
                    "CompositeTrigger": {
                        "CompositeTriggerType": "CRON",
                        "Data": {
                            "Regex": null
                        },
                        "TriggerSource": null,
                        "Triggers": [
                            {
                                "Data": {
                                    "AlarmName": null,
                                    "AwsRegion": null,
                                    "Port": null,
                                    "SearchString": null,
                                    "Url": null
                                },
                                "TriggerSource": null,
                                "TriggerType": "CRON_TRIGGER"
                            }
                        ]
                    },
                    "RuleName": "Kill and restart postgres when num of waiting connections is way too high"
                },
                "tagline": "Kill and restart postgres SQL when #waiting_connections is way too high",
                "tags": [
                    "Heroku",
                    "Postgres",
                    "Database",
                    "Librato"
                ],
                "trigger": {
                    "description": "Whenever heroku postgres #waiting_connections is too high"
                },
                "video": "https://www.youtube.com/v/jARt8BjBl7Q"
            },
            "tagline": "Kill and restart postgres SQL when #waiting_connections is way too high",
            "tags": [
                "Heroku",
                "Postgres",
                "Database",
                "Librato"
            ],
            "trigger": {
                "description": "Whenever heroku postgres #waiting_connections is too high"
            },
            "video": "https://www.youtube.com/v/jARt8BjBl7Q"
        },
        "tagline": "Kill and restart postgres SQL when #waiting_connections is way too high",
        "tags": [
            "Heroku",
            "Postgres",
            "Database",
            "Librato"
        ],
        "trigger": {
            "description": "Whenever heroku postgres #waiting_connections is too high"
        }
    },
    "tagline": "Kill and restart postgres SQL when #waiting_connections is way too high",
    "tags": [
        "Heroku",
        "Postgres",
        "Database",
        "Librato"
    ],
    "trigger": {
        "description": "Whenever heroku postgres #waiting_connections is too high"
    },
    "video": "https://www.youtube.com/v/jARt8BjBl7Q"
}